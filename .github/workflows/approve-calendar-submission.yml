name: Approve calendar submission

on:
  issues:
    types: [labeled, edited, reopened]
  workflow_dispatch:

permissions:
  contents: write
  issues: read

jobs:
  approve:
    # Runs only when the issue has the exact label "Approved"
    if: contains(github.event.issue.labels.*.name, 'Approved')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure events file exists
        run: |
          mkdir -p calendar
          if [ ! -f calendar/events.json ]; then
            echo '[]' > calendar/events.json
          fi

      - name: Append event to calendar/events.json
        run: |
          node -e "
          const fs = require('fs');
          const path = 'calendar/events.json';
          const body = process.env.ISSUE_BODY || '';
          const titleRaw = process.env.ISSUE_TITLE || 'Untitled';

          const getKV = (label) => {
            const m = body.match(new RegExp('^\\s*' + label + '\\s*:\\s*(.+)$','im'));
            return m ? m[1].trim() : '';
          };

          // Title: try 'Event Name:', then parse from issue title, then fallback
          let title = getKV('Event Name');
          if (!title) {
            const m1 = titleRaw.match(/Event:\\s*<?([^>]+)>?/i);
            title = m1 ? m1[1].trim() : '';
          }
          if (!title) {
            const m2 = titleRaw.match(/<([^>]+)>/);
            title = (m2 ? m2[1] : titleRaw).trim();
          }

          // Date: 'Event Date:' or 'Date:'/'When:'; else any YYYY-MM-DD; else convert MM/DD/YYYY
          let date = getKV('Event Date') || getKV('Date') || getKV('When');
          if (!date) {
            const iso = body.match(/\\b(20\\d{2}-\\d{2}-\\d{2})\\b/);
            if (iso) date = iso[1];
          }
          if (date && /\\d{1,2}\\/\\d{1,2}\\/\\d{4}/.test(date)) {
            const [mm, dd, yyyy] = date.match(/(\\d{1,2})\\/(\\d{1,2})\\/(\\d{4})/).slice(1);
            const pad = s => s.toString().padStart(2,'0');
            date = `${yyyy}-${pad(mm)}-${pad(dd)}`;
          }

          const time = getKV('Event Time') || getKV('Time');
          const description = getKV('Event Description') || getKV('Description') || '';
          const contact = getKV('Event Contact') || getKV('Contact') || '';
          const phone = getKV('Event Contact Phone Number') || getKV('Phone') || '';
          const email = getKV('Event Contact Email') || getKV('Email') || '';

          if (!title || !date) {
            console.error('Missing title or date; refusing to append.');
            console.error('Parsed title=', title, 'date=', date);
            process.exit(1);
          }

          const events = JSON.parse(fs.readFileSync(path, 'utf8'));
          const ev = { title, date, time, description, contact, phone, email, sourceIssue: process.env.ISSUE_URL };
          events.push(ev);
          fs.writeFileSync(path, JSON.stringify(events, null, 2));
          console.log('Appended event:', ev);
          "
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_URL: ${{ github.event.issue.html_url }}

      - name: Commit calendar changes (if any)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add calendar/events.json
          if git diff --cached --quiet; then
            echo "No calendar changes to commit."
            exit 0
          fi
          git commit -m "chore(calendar): approve issue #${{ github.event.issue.number }}"
          git push
